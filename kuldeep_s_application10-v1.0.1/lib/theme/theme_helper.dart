import 'dart:ui';
import 'package:flutter/material.dart';
import 'package:kuldeep_s_application10/core/utils/pref_utils.dart';
import 'package:kuldeep_s_application10/core/utils/size_utils.dart';

/// Helper class for managing themes and colors.
class ThemeHelper {
  // The current app theme
  var _appTheme = PrefUtils().getThemeData();

// A map of custom color themes supported by the app
  Map<String, PrimaryColors> _supportedCustomColor = {
    'primary': PrimaryColors()
  };

// A map of color schemes supported by the app
  Map<String, ColorScheme> _supportedColorScheme = {
    'primary': ColorSchemes.primaryColorScheme
  };

  /// Returns the primary colors for the current theme.
  PrimaryColors _getThemeColors() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedCustomColor.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    return _supportedCustomColor[_appTheme] ?? PrimaryColors();
  }

  /// Returns the current theme data.
  ThemeData _getThemeData() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedColorScheme.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    var colorScheme =
        _supportedColorScheme[_appTheme] ?? ColorSchemes.primaryColorScheme;
    return ThemeData(
      visualDensity: VisualDensity.standard,
      colorScheme: colorScheme,
      textTheme: TextThemes.textTheme(colorScheme),
      scaffoldBackgroundColor: appTheme.gray50,
      elevatedButtonTheme: ElevatedButtonThemeData(
        style: ElevatedButton.styleFrom(
          backgroundColor: colorScheme.primary,
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(27.h),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      dividerTheme: DividerThemeData(
        thickness: 1,
        space: 1,
        color: colorScheme.onPrimaryContainer,
      ),
    );
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors themeColor() => _getThemeColors();

  /// Returns the current theme data.
  ThemeData themeData() => _getThemeData();
}

/// Class containing the supported text theme styles.
class TextThemes {
  static TextTheme textTheme(ColorScheme colorScheme) => TextTheme(
        bodyLarge: TextStyle(
          color: appTheme.gray600,
          fontSize: 16.fSize,
          fontFamily: 'Airbnb Cereal App',
          fontWeight: FontWeight.w400,
        ),
        bodyMedium: TextStyle(
          color: appTheme.gray600,
          fontSize: 14.fSize,
          fontFamily: 'Airbnb Cereal App',
          fontWeight: FontWeight.w400,
        ),
        bodySmall: TextStyle(
          color: colorScheme.primary,
          fontSize: 12.fSize,
          fontFamily: 'Airbnb Cereal App',
          fontWeight: FontWeight.w400,
        ),
        displayMedium: TextStyle(
          color: appTheme.whiteA700,
          fontSize: 40.fSize,
          fontFamily: 'Airbnb Cereal App',
          fontWeight: FontWeight.w500,
        ),
        headlineMedium: TextStyle(
          color: appTheme.whiteA700,
          fontSize: 28.fSize,
          fontFamily: 'Airbnb Cereal App',
          fontWeight: FontWeight.w500,
        ),
        headlineSmall: TextStyle(
          color: appTheme.whiteA700,
          fontSize: 24.fSize,
          fontFamily: 'Airbnb Cereal App',
          fontWeight: FontWeight.w500,
        ),
        labelLarge: TextStyle(
          color: appTheme.gray90002,
          fontSize: 12.fSize,
          fontFamily: 'Airbnb Cereal App',
          fontWeight: FontWeight.w500,
        ),
        titleLarge: TextStyle(
          color: appTheme.gray600,
          fontSize: 20.fSize,
          fontFamily: 'Airbnb Cereal App',
          fontWeight: FontWeight.w400,
        ),
        titleMedium: TextStyle(
          color: appTheme.whiteA700,
          fontSize: 16.fSize,
          fontFamily: 'Airbnb Cereal App',
          fontWeight: FontWeight.w500,
        ),
        titleSmall: TextStyle(
          color: appTheme.whiteA700,
          fontSize: 14.fSize,
          fontFamily: 'Airbnb Cereal App',
          fontWeight: FontWeight.w500,
        ),
      );
}

/// Class containing the supported color schemes.
class ColorSchemes {
  static final primaryColorScheme = ColorScheme.light(
    // Primary colors
    primary: Color(0XFF5B9EE1),
    primaryContainer: Color(0XFF1F2C39),

    // Error colors
    errorContainer: Color(0X1E485F75),
    onError: Color(0XFF2FB63C),

    // On colors(text colors)
    onPrimary: Color(0XFF101817),
    onPrimaryContainer: Color(0XFFE9ECEF),
  );
}

/// Class containing custom colors for a primary theme.
class PrimaryColors {
  // Amber
  Color get amber300 => Color(0XFFF6C854);

  // Blue
  Color get blue200 => Color(0XFF91CAFF);
  Color get blue20001 => Color(0XFFA4CDF6);
  Color get blue400 => Color(0XFF4B8CD8);
  Color get blue50 => Color(0XFFDFEFFF);

  // BlueGrayf
  Color get blueGray1003f => Color(0X3FD8D8D8);

  // BlueGray
  Color get blueGray400 => Color(0XFF828A89);
  Color get blueGray600 => Color(0XFF646A7E);
  Color get blueGray800 => Color(0XFF2D3B48);
  Color get blueGray900 => Color(0XFF202D3B);
  Color get blueGray90066 => Color(0X66212D39);

  // Gray
  Color get gray100 => Color(0XFFF2F2F2);
  Color get gray200 => Color(0XFFEEEEEE);
  Color get gray300 => Color(0XFFE4E4E4);
  Color get gray50 => Color(0XFFF8F9FA);
  Color get gray600 => Color(0XFF707B81);
  Color get gray900 => Color(0XFF161F28);
  Color get gray90001 => Color(0XFF1A2530);
  Color get gray90002 => Color(0XFF1A242F);

  // Indigoe
  Color get indigo2001e => Color(0X1E82AAD1);

  // Indigo
  Color get indigo300 => Color(0XFF6D80E9);
  Color get indigo400 => Color(0XFF5F6ACA);
  Color get indigo50 => Color(0XFFE5EEF7);
  Color get indigo800 => Color(0XFF2F2E7F);
  Color get indigo80001 => Color(0XFF253B80);

  // Red
  Color get red300 => Color(0XFFF77165);
  Color get red400 => Color(0XFFD0654E);
  Color get red500 => Color(0XFFEA4335);

  // Teal
  Color get teal200 => Color(0XFF6CCFC0);

  // White
  Color get whiteA700 => Color(0XFFFFFFFF);
}

PrimaryColors get appTheme => ThemeHelper().themeColor();
ThemeData get theme => ThemeHelper().themeData();
